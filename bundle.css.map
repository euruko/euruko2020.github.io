{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/Form.svelte"
  ],
  "sourcesContent": [
    "<script>\n  let loading = false;\n  let promise = null;\n  let email = \"\";\n  const options = [\n    { name: \"cfp\", description: \"The call for papers is open\" },\n    { name: \"tickets\", description: \"Tickets are available\" }\n  ];\n  let selectedOptions = options.map(option => option.name);\n\n  async function postData(url, data = {}) {\n    return fetch(url, {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(response => {\n        loading = false;\n        return response.json();\n      })\n      .catch(error => {\n        loading = false;\n        throw error;\n      });\n  }\n\n  function handleSubmit(event) {\n    loading = true;\n    promise = postData(\"https://list.euruko2020.org/register\", {\n      email: email,\n      options: selectedOptions\n    });\n  }\n\n  function shouldDisableSubmit() {\n    return (loading || selectedOptions.length === 0 || email.length === 0);\n  }\n\n  function clearPromise() {\n    promise = null;\n  }\n</script>\n\n<style>\n  .error {\n    color: red;\n  }\n</style>\n\n<form on:submit|preventDefault={handleSubmit}>\n  <h3 class=\"form-title\">Get notified once we know more about the event</h3>\n  <input\n    class=\"form-email\"\n    type=\"email\"\n    placeholder=\"Your email address\"\n    bind:value={email}\n    readonly={loading}\n    required\n    on:input={clearPromise} />\n  <div class=\"form-notices\">\n    <p class=\"form-notices__title\">Notify me when</p>\n\n    {#each options as option}\n      <div class=\"form-checkbox\">\n        <input\n          class=\"form-checkbox__input\"\n          type=\"checkbox\"\n          bind:group={selectedOptions}\n          value={option.name}\n          id={option.name} />\n        <label for={option.name} class=\"form-checkbox__text\">\n           {option.description}\n        </label>\n      </div>\n    {/each}\n  </div>\n\n  <button class=\"form-submit\" type=\"submit\" disabled={loading || selectedOptions.length === 0 || email.length === 0}>\n    {#if loading}Sending{:else}Submit{/if}\n  </button>\n\n  {#if promise}\n    {#await promise}\n      <p>...waiting</p>\n    {:then result}\n      {#if result.success}\n        <p>Success! Check your inbox for the confirmation link.</p>\n      {:else}\n        <p class=\"error\">{result.error}</p>\n      {/if}\n    {:catch error}\n      <p class=\"error\">{error.message}</p>\n    {/await}\n  {/if}\n</form>\n"
  ],
  "names": [],
  "mappings": "AAgDE,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,GAAG,AACZ,CAAC"
}